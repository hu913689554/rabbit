{"remainingRequest":"D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\src\\views\\chatroom\\server.js","dependencies":[{"path":"D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\src\\views\\chatroom\\server.js","mtime":1647145291468},{"path":"D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\babel.config.js","mtime":1646911679241},{"path":"D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Work\\源码\\学习\\rabbit\\vue-element-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiKTsKCnZhciB1c2VyTnVtID0gMDsgLy/nu5/orqHlnKjnur/kurrmlbAKCnZhciBjaGF0TGlzdCA9IFtdOyAvL+iusOW9leiBiuWkqeiusOW9lQoKdmFyIFdlYlNvY2tldFNlcnZlciA9IHJlcXVpcmUoJ3dzJykuU2VydmVyOwoKd3NzID0gbmV3IFdlYlNvY2tldFNlcnZlcih7CiAgcG9ydDogODE4MQp9KTsgLy84MTgxIOS4juWJjeerr+ebuOWvueW6lAovL+iwg+eUqCBicm9hZGNhc3Qg5bm/5pKt77yM5a6e546w5pWw5o2u5LqS6YCa5ZKM5a6e5pe25pu05pawCgp3c3MuYnJvYWRjYXN0ID0gZnVuY3Rpb24gKG1zZykgewogIHdzcy5jbGllbnRzLmZvckVhY2goZnVuY3Rpb24gZWFjaChjbGllbnQpIHsKICAgIGNsaWVudC5zZW5kKG1zZyk7CiAgfSk7Cn07Cgp3c3Mub24oJ2Nvbm5lY3Rpb24nLCBmdW5jdGlvbiAod3MpIHsKICB1c2VyTnVtKys7IC8v5bu656uL6L+e5o6l5oiQ5Yqf5Zyo57q/5Lq65pWwICsxCgogIHdzcy5icm9hZGNhc3QoSlNPTi5zdHJpbmdpZnkoewogICAgZnVuTmFtZTogJ3VzZXJDb3VudCcsCiAgICB1c2VyczogdXNlck51bSwKICAgIGNoYXQ6IGNoYXRMaXN0CiAgfSkpOyAvL+W7uueri+i/nuaOpeaIkOWKn+W5v+aSreS4gOasoeW9k+WJjeWcqOe6v+S6uuaVsAoKICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIGNsaWVudHM6JywgdXNlck51bSk7IC8v5o6l5pS25YmN56uv5Y+R6YCB6L+H5p2l55qE5pWw5o2uCgogIHdzLm9uKCdtZXNzYWdlJywgZnVuY3Rpb24gKGUpIHsKICAgIHZhciByZXNEYXRhID0gSlNPTi5wYXJzZShlKTsKICAgIGNvbnNvbGUubG9nKCfmjqXmlLbliLDmnaXoh6pjbGVudOeahOa2iOaBr++8micgKyByZXNEYXRhLm1zZyk7CiAgICBjaGF0TGlzdC5wdXNoKHsKICAgICAgdXNlcklkOiByZXNEYXRhLnVzZXJJZCwKICAgICAgY29udGVudDogcmVzRGF0YS5tc2cKICAgIH0pOyAvL+avj+asoeWPkemAgeS/oeaBr++8jOmDveS8muaKiuS/oeaBr+WtmOi1t+adpe+8jOeEtuWQjumAmui/h+W5v+aSreS8oOmAkuWHuuWOu++8jOi/meagt+atpOavj+asoei/m+adpeeahOeUqOaIt+WwseiDveeci+WIsOS5i+WJjeeahOaVsOaNrgoKICAgIHdzcy5icm9hZGNhc3QoSlNPTi5zdHJpbmdpZnkoewogICAgICB1c2VySWQ6IHJlc0RhdGEudXNlcklkLAogICAgICBtc2c6IHJlc0RhdGEubXNnCiAgICB9KSk7IC8v5q+P5qyh5Y+R6YCB6YO955u45b2T5LqO5bm/5pKt5LiA5qyh5raI5oGvCiAgfSk7CiAgd3Mub24oJ2Nsb3NlJywgZnVuY3Rpb24gKGUpIHsKICAgIHVzZXJOdW0tLTsgLy/lu7rnq4vov57mjqXlhbPpl63lnKjnur/kurrmlbAgLTEKCiAgICB3c3MuYnJvYWRjYXN0KEpTT04uc3RyaW5naWZ5KHsKICAgICAgZnVuTmFtZTogJ3VzZXJDb3VudCcsCiAgICAgIHVzZXJzOiB1c2VyTnVtLAogICAgICBjaGF0OiBjaGF0TGlzdAogICAgfSkpOyAvL+W7uueri+i/nuaOpeWFs+mXreW5v+aSreS4gOasoeW9k+WJjeWcqOe6v+S6uuaVsAoKICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgY2xpZW50czonLCB1c2VyTnVtKTsKICAgIGNvbnNvbGUubG9nKCfplb/ov57mjqXlt7LlhbPpl60nKTsKICB9KTsKfSk7CmNvbnNvbGUubG9nKCfmnI3liqHlmajliJvlu7rmiJDlip8nKTs="},{"version":3,"sources":["D:/Work/源码/学习/rabbit/vue-element-admin/src/views/chatroom/server.js"],"names":["userNum","chatList","WebSocketServer","require","Server","wss","port","broadcast","msg","clients","forEach","each","client","send","on","ws","JSON","stringify","funName","users","chat","console","log","e","resData","parse","push","userId","content"],"mappings":";;;;;;AAAA,IAAIA,OAAO,GAAG,CAAd,C,CAAiB;;AACjB,IAAIC,QAAQ,GAAG,EAAf,C,CAAkB;;AAClB,IAAIC,eAAe,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcC,MAApC;;AACAC,GAAG,GAAG,IAAIH,eAAJ,CAAoB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAApB,CAAN,C,CAA2C;AAC3C;;AACAD,GAAG,CAACE,SAAJ,GAAgB,UAAUC,GAAV,EAAe;AAC3BH,EAAAA,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACtCA,IAAAA,MAAM,CAACC,IAAP,CAAYL,GAAZ;AACH,GAFD;AAGH,CAJD;;AAKAH,GAAG,CAACS,EAAJ,CAAO,YAAP,EAAqB,UAAUC,EAAV,EAAc;AAC/Bf,EAAAA,OAAO,GADwB,CACrB;;AACVK,EAAAA,GAAG,CAACE,SAAJ,CAAcS,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,OAAO,EAAE,WAAX;AAAwBC,IAAAA,KAAK,EAAEnB,OAA/B;AAAwCoB,IAAAA,IAAI,EAAEnB;AAA9C,GAAf,CAAd,EAF+B,CAE0D;;AACzFoB,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCtB,OAAlC,EAH+B,CAI/B;;AACAe,EAAAA,EAAE,CAACD,EAAH,CAAM,SAAN,EAAiB,UAAUS,CAAV,EAAa;AAC1B,QAAIC,OAAO,GAAGR,IAAI,CAACS,KAAL,CAAWF,CAAX,CAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBE,OAAO,CAAChB,GAAvC;AACAP,IAAAA,QAAQ,CAACyB,IAAT,CAAc;AAAEC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MAAlB;AAA0BC,MAAAA,OAAO,EAAEJ,OAAO,CAAChB;AAA3C,KAAd,EAH0B,CAGsC;;AAChEH,IAAAA,GAAG,CAACE,SAAJ,CAAcS,IAAI,CAACC,SAAL,CAAe;AAAEU,MAAAA,MAAM,EAAEH,OAAO,CAACG,MAAlB;AAA0BnB,MAAAA,GAAG,EAAEgB,OAAO,CAAChB;AAAvC,KAAf,CAAd,EAJ0B,CAImD;AAEhF,GAND;AAOAO,EAAAA,EAAE,CAACD,EAAH,CAAM,OAAN,EAAe,UAAUS,CAAV,EAAa;AACxBvB,IAAAA,OAAO,GADiB,CACd;;AACVK,IAAAA,GAAG,CAACE,SAAJ,CAAcS,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,OAAO,EAAE,WAAX;AAAwBC,MAAAA,KAAK,EAAEnB,OAA/B;AAAwCoB,MAAAA,IAAI,EAAEnB;AAA9C,KAAf,CAAd,EAFwB,CAEgE;;AACxFoB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCtB,OAAlC;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GALD;AAMH,CAlBD;AAmBAD,OAAO,CAACC,GAAR,CAAY,SAAZ","sourcesContent":["var userNum = 0; //统计在线人数\r\nvar chatList = [];//记录聊天记录\r\nvar WebSocketServer = require('ws').Server;\r\nwss = new WebSocketServer({ port: 8181 }); //8181 与前端相对应\r\n//调用 broadcast 广播，实现数据互通和实时更新\r\nwss.broadcast = function (msg) {\r\n    wss.clients.forEach(function each(client) {\r\n        client.send(msg);\r\n    });\r\n};\r\nwss.on('connection', function (ws) {\r\n    userNum++;//建立连接成功在线人数 +1\r\n    wss.broadcast(JSON.stringify({ funName: 'userCount', users: userNum, chat: chatList })); //建立连接成功广播一次当前在线人数\r\n    console.log('Connected clients:', userNum);\r\n    //接收前端发送过来的数据\r\n    ws.on('message', function (e) {\r\n        var resData = JSON.parse(e)\r\n        console.log('接收到来自clent的消息：' + resData.msg)\r\n        chatList.push({ userId: resData.userId, content: resData.msg });//每次发送信息，都会把信息存起来，然后通过广播传递出去，这样此每次进来的用户就能看到之前的数据\r\n        wss.broadcast(JSON.stringify({ userId: resData.userId, msg: resData.msg })); //每次发送都相当于广播一次消息\r\n\r\n    });\r\n    ws.on('close', function (e) {\r\n        userNum--;//建立连接关闭在线人数 -1\r\n        wss.broadcast(JSON.stringify({ funName: 'userCount', users: userNum, chat: chatList }));//建立连接关闭广播一次当前在线人数\r\n        console.log('Connected clients:', userNum);\r\n        console.log('长连接已关闭')\r\n    })\r\n})\r\nconsole.log('服务器创建成功')"]}]}